{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","currentUser","preparedTodos","App","useState","newTitle","setNewTitle","newUserId","setNewUserId","setTodos","isTitleValid","setIsTitleValid","isUserValid","setIsUserValid","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","inputUser","currentTodos","newTodo","sort","previous","current","previousTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a937fc21.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../react-app-env';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames({\n        TodoInfo,\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../react-app-env';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './react-app-env';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number): User | null => {\n  const user = usersFromServer.find(currentUser => currentUser.id === userId);\n\n  return user || null;\n};\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserId, setNewUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isUserValid, setIsUserValid] = useState(true);\n\n  const generateTodoId = (currentTodos: Todo[]) => {\n    const biggestId = [...currentTodos].sort((previous, current) => (\n      current.id - previous.id\n    ))[0].id;\n\n    return biggestId + 1;\n  };\n\n  const clearState = () => {\n    setNewTitle('');\n    setNewUserId(0);\n    setIsTitleValid(true);\n    setIsUserValid(true);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = newTitle.trim();\n    const inputUser = getUserById(newUserId);\n\n    if (!trimmedTitle || !inputUser) {\n      if (!trimmedTitle) {\n        setIsTitleValid(false);\n      }\n\n      if (!inputUser) {\n        setIsUserValid(false);\n      }\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: generateTodoId(todos),\n      title: newTitle,\n      completed: false,\n      userId: newUserId,\n      user: inputUser,\n    };\n\n    setTodos(previousTodos => ([\n      ...previousTodos,\n      newTodo,\n    ]));\n\n    clearState();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <span>Title: </span>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={event => {\n              setNewTitle(event.target.value);\n\n              if (!isTitleValid) {\n                setIsTitleValid(true);\n              }\n            }}\n          />\n\n          {!isTitleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <span>User: </span>\n\n          <select\n            data-cy=\"userSelect\"\n            value={newUserId}\n            onChange={event => {\n              setNewUserId(+event.target.value);\n\n              if (!isUserValid) {\n                setIsUserValid(true);\n              }\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ name, id }) => (\n              <option key={id} value={id}>{name}</option>\n            ))}\n          </select>\n\n          {!isUserValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}